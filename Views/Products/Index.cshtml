@using X.PagedList
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<MyMvcApp.Models.Product>

@{
    ViewData["Title"] = "Products";
    var currentFilter = ViewData["CurrentFilter"] as string;
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <input type="text" name="searchString" value="@currentFilter" placeholder="Search" />
    <button type="submit">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Category</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Price</td>
                <td>@item.Category?.Name</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewData["CurrentFilter"]}))
</div>